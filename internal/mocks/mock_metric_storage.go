// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/shevchukeugeni/metrics/internal/server (interfaces: MetricStorage)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	store "github.com/shevchukeugeni/metrics/internal/store"
	types "github.com/shevchukeugeni/metrics/internal/types"
)

// MockMetricStorage is a mock of MetricStorage interface.
type MockMetricStorage struct {
	ctrl     *gomock.Controller
	recorder *MockMetricStorageMockRecorder
}

// MockMetricStorageMockRecorder is the mock recorder for MockMetricStorage.
type MockMetricStorageMockRecorder struct {
	mock *MockMetricStorage
}

// NewMockMetricStorage creates a new mock instance.
func NewMockMetricStorage(ctrl *gomock.Controller) *MockMetricStorage {
	mock := &MockMetricStorage{ctrl: ctrl}
	mock.recorder = &MockMetricStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricStorage) EXPECT() *MockMetricStorageMockRecorder {
	return m.recorder
}

// GetMetric mocks base method.
func (m *MockMetricStorage) GetMetric(arg0 string) map[string]string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetric", arg0)
	ret0, _ := ret[0].(map[string]string)
	return ret0
}

// GetMetric indicates an expected call of GetMetric.
func (mr *MockMetricStorageMockRecorder) GetMetric(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetric", reflect.TypeOf((*MockMetricStorage)(nil).GetMetric), arg0)
}

// GetMetrics mocks base method.
func (m *MockMetricStorage) GetMetrics() map[string]store.Metric {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetrics")
	ret0, _ := ret[0].(map[string]store.Metric)
	return ret0
}

// GetMetrics indicates an expected call of GetMetrics.
func (mr *MockMetricStorageMockRecorder) GetMetrics() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetrics", reflect.TypeOf((*MockMetricStorage)(nil).GetMetrics))
}

// UpdateMetric mocks base method.
func (m *MockMetricStorage) UpdateMetric(arg0, arg1, arg2 string) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMetric", arg0, arg1, arg2)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateMetric indicates an expected call of UpdateMetric.
func (mr *MockMetricStorageMockRecorder) UpdateMetric(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMetric", reflect.TypeOf((*MockMetricStorage)(nil).UpdateMetric), arg0, arg1, arg2)
}

// UpdateMetrics mocks base method.
func (m *MockMetricStorage) UpdateMetrics(arg0 []types.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMetrics", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateMetrics indicates an expected call of UpdateMetrics.
func (mr *MockMetricStorageMockRecorder) UpdateMetrics(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMetrics", reflect.TypeOf((*MockMetricStorage)(nil).UpdateMetrics), arg0)
}
